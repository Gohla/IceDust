module generating/webdsl-java/generate

imports // constructors

	signatures/Modules-sig

imports // functions

  api/module-api
	lib/js/pp/spoofaxJS-pp
	lib/js/pp/spoofaxJS-parenthesize
	generating/webdsl/java/module
	generating/webdsl/js/module

rules // documentation
	
	/*
	 * Generate a native java java.util.concurrent.ConcurrentLinkedQueue<E> for each type.
	 * Each normal page request can flag items dirty in these queues.
	 * The central eventual consistent thread empties these queues and computes everything.
	 * Items may be added during computation, the algorithm will do those first in order to avoid unnecessary computation (note this might lead to starvation during heavy use).
	 */

rules // Builders

    pp-js-string : x -> result
    with
      result :=
            <parenthesize-spoofaxJS
            ; debug(!"paren")
            ; prettyprint-Statement
            ; debug(!"prettyprint")
            ; !V([], <id>)
            ; debug(!"v thing")
            ; box2text-string(|120)> x
            ; debug(!"box to string")
	
	generate-webdsl-js-code: moduleName -> result
	  with
			js-ast := <blaat> moduleName;
			result   := <pp-js-string> js-ast
