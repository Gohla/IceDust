module generating/webdsl/js/module

imports // constructors

  webdsl/constructors
  webdsl/WebDSL
  desugaring/constructors
  tiersplit/constructors

imports // functions

  lib/js/signatures/spoofaxJS-sig
  generating/_ir/model 
  generating/webdsl/model
  generating/webdsl/data
  api/model-names-api
  api/module-api
  api/module-names-api
  lib/lists-tuples
  lib/string
  analysis2/path
  api/_runtime
  api/model-api
  api/model-names-api
  generating/_ir/model
  generating/webdsl/expressions
  generating/webdsl/expressions-references
  generating/webdsl/types
  lib/search
  names/naming/names
  naming/_notNaBL
  tiersplit/intra-object
  generating/webdsl/js/expressions
  
rules // module

  name-to-jsstring: name -> String(<concat-strings> ["\"", name, "\""])
  
  name-to-jsstring-with-prefix(|prefix): name -> String(<concat-strings> ["\"", prefix, "_", name, "\""])

  is-relation = ?Relation(_)

  moduleName-to-derivation-js: moduleName -> derivation-js
    with
      attributes := <modulename-get-attributenames-default-derivation> moduleName;
      stmt_derivationjs* := <map(attributeName-default-derivation-to-js)>attributes;
      derivation-js := js-program |[stmt_derivationjs*]|
    
  attributeName-default-derivation-to-js: attributeName -> derivation-js
    with
      exp_attributeNamestr := <name-to-jsstring-with-prefix(|<attributename-get-entityname> attributeName)> attributeName;
      partial-expr := <attributename-get-expr-tiersplit-expr> attributeName;
      exp_derivation := <expr-to-js> partial-expr;
      stmt_return := js-stmt |[ return exp_derivation; ]|;
      derivation-js := js-stmt |[
        setDerived(exp_attributeNamestr, function() {
        stmt_return
      });
    ]|
    