module pp

imports // signatures

	signatures/Modules-sig
	desugaring/constructors

imports // functions

	libstratego-gpp
	pp/_PrettyPrint-pp
	pp/Common-pp
	pp/Model-pp
	pp/Modules-pp
	pp/IceDust-pp
	pp/Data-pp
	pp/Execute-pp
	pp/Expressions-pp
	pp/Types-pp
  pp/IceDust-parenthesize
	prettyprinting/variations

rules
	
  pp-IceDust-string =
      parenthesize-IceDust
    ; apply-pp-variation
    ; prettyprint-Start
    ; !V([], <id>)
    ; box2text-string(|120)

  pp-partial-IceDust-string =
      parenthesize-IceDust
    ; apply-pp-variation
    ; prettyprint-example
    ; !V([], <id>)
    ; box2text-string(|120)
       
  pp-debug :
    ast -> result
    with
       result := <pp-IceDust-string> ast
    <+ <bottomup(try(not(is-string); not(is-list); not(pp-IceDust-string); debug(!"cannot pp ")))> ast
    ;  result := ""

rules // needed after desugaring
	
	pp-option(pp): x -> <pp>x
		where
			not(None() := x);
			not(Some(_) := x)
	
	prettyprint-Start: ModuleDesugared(a,b) -> <prettyprint-Start>Module(a,b)

	prettyprint-AttrRef: NaBLHelp(a, _) -> <prettyprint-AttrRef>a
	prettyprint-RoleRef: NaBLHelp(a, _) -> <prettyprint-RoleRef>a
	prettyprint-ID:      NaBLHelp(a, _) -> <prettyprint-ID>a

	prettyprint-Exp = prettyprint-ID

rules // content completion
  
  pp-completion = pp-partial-IceDust-string
