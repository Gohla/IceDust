module example

model

  entity Student {
//    name   : String = concat("Foo" ++ "Bar" + f as String)
//    age    : Int 
//    bornIn : Int = age + 1 + 4 * 7 % 2
//    ages   : Int * = knows2.age
//    f      : Float ? = 3.4 / (2 as Float)
//    f2     : Float ? = no value + no value
//    b      : Boolean = not (3 == 3)
//    i      : Int = if(b and not(b)) 3 else 4 (default)
//    a      : Float = f <+ f2 <+ 0.0
//    fdsa   : Float =  min((knows2).f ++ 1.0) 
  }
  
//  relation Student.knows + <-> Student.knows2
  
  relation Enrollment {
    Course +
    Student *
//    student.courses <-> course.students
    f : Int //= course.i
  }
  
//  relation Student.courses <-> + Course.students
  
  entity Course {
    i : Int //= count(this.students)
  }

data

  math : Course {
    student =
      alice {
        course = ai
      },
      bob {
        
      },
      {
        course = ai
      }
  }

  ai : Course {
    student = alice, bob
    i = 5
  }
  
  : Enrollment {
    student = bob
  }
  
execute

  3 + 5
  
  7 * (7 ++ 9)
  
  math.student.course.i
  math.enrollment.f
  