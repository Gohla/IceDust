module analysis

imports
  
  nabl2shared
  nabl2runtime
  
  static-semantics

  pp

  analysis/_constructors
  analysis/_multiplicity-functions
  analysis/_type-functions
  analysis/expressions-aggregation
  analysis/expressions-casts
  analysis/expressions-logic
  analysis/expressions-math
  analysis/expressions-multiplicity-operators

  desugaring/desugar

rules // Analysis

  editor-analyze = analyze(desugar-before-analysis)

  ignore-unused-references = ?Namespace("Entity2")
  ignore-unused-references = ?Namespace("Member2")

rules // Debugging
  
  // Prints the abstract syntax ATerm of a selection.
  debug-show-aterm: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"aterm")> path
       ; result   := selected

  // Prints the analyzed annotated abstract syntax ATerm of a selection.
  debug-show-analyzed: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"analyzed.aterm")> path
       ; result   := selected

//  debug-generate-constraint = id
  
  get-type         = get-ast-type;?TTuple(<id>,_);normalize-type
  get-multiplicity = get-ast-type;?TTuple(_,<id>);normalize-multiplicity
  
  normalize-type = ?TInt();!Int()
  normalize-type = ?TFloat();!Float()
  normalize-type = ?TDatetime();!Datetime()
  normalize-type = ?TBoolean();!Boolean()
  normalize-type = ?TString();!String()
  normalize-type = ?TNoValue();!NoValue()
  normalize-type = ?TEntity(Occurrence(_,<id>,_))
  normalize-type = ?TShortcut(TEntity(Occurrence(_,<id>,_)),_)
  normalize-type = debug
  
  normalize-multiplicity = ?TOne();!One()
  normalize-multiplicity = ?TZeroOrOne();!ZeroOrOne()
  normalize-multiplicity = ?TZeroOrMore();!ZeroOrMore()
  normalize-multiplicity = ?TOneOrMore();!OneOrMore()
