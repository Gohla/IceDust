module analysis

imports
  
  nabl2shared
  nabl2runtime
  
  static-semantics

  pp

signature constructors
  
  CartesianProduct : Type * Type -> TypeOp

rules

  is-op = ?CartesianProduct(_,_)
  
  reduce-op(|sol): CartesianProduct(TOne()       , a            ) -> a
  reduce-op(|sol): CartesianProduct(a            , TOne()       ) -> a
  reduce-op(|sol): CartesianProduct(TZeroOrMore(), _            ) -> TZeroOrMore()
  reduce-op(|sol): CartesianProduct(_            , TZeroOrMore()) -> TZeroOrMore()
  reduce-op(|sol): CartesianProduct(TOneOrMore() , TOneOrMore() ) -> TOneOrMore()
  reduce-op(|sol): CartesianProduct(TOneOrMore() , TZeroOrOne() ) -> TOneOrMore()
  reduce-op(|sol): CartesianProduct(TZeroOrOne() , TOneOrMore() ) -> TOneOrMore()
  reduce-op(|sol): CartesianProduct(TZeroOrOne() , TZeroOrOne() ) -> TZeroOrOne()

rules // Analysis

  editor-analyze = analyze(id)

rules // Debugging
  
  // Prints the abstract syntax ATerm of a selection.
  debug-show-aterm: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"aterm")> path
       ; result   := selected

  // Prints the analyzed annotated abstract syntax ATerm of a selection.
  debug-show-analyzed: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"analyzed.aterm")> path
       ; result   := selected
