module analysis/_multiplicity-functions

imports
 
  static-semantics

signature constructors
  
  CartesianProduct : Type * Type -> TypeOp

rules

  is-op = ?CartesianProduct(_,_)
  
  reduce-op(|sol): CartesianProduct(TOne()       , a            ) -> a
  reduce-op(|sol): CartesianProduct(a            , TOne()       ) -> a
  reduce-op(|sol): CartesianProduct(TZeroOrMore(), _            ) -> TZeroOrMore()
  reduce-op(|sol): CartesianProduct(_            , TZeroOrMore()) -> TZeroOrMore()
  reduce-op(|sol): CartesianProduct(TOneOrMore() , TOneOrMore() ) -> TOneOrMore()
  reduce-op(|sol): CartesianProduct(TOneOrMore() , TZeroOrOne() ) -> TOneOrMore()
  reduce-op(|sol): CartesianProduct(TZeroOrOne() , TOneOrMore() ) -> TOneOrMore()
  reduce-op(|sol): CartesianProduct(TZeroOrOne() , TZeroOrOne() ) -> TZeroOrOne()
  
signature constructors
  
  InBounds : Type * Type -> TypeOp // bounds * fits in bound?

rules

  is-op = ?InBounds(_,_)

  reduce-op(|sol): InBounds(a            , a     ) -> None()
  reduce-op(|sol): InBounds(TZeroOrMore(), _     ) -> None()
  reduce-op(|sol): InBounds(_            , TOne()) -> None()
