module analysis/_type-functions

imports
 
  static-semantics

signature constructors
  
  LeastUpperBound : Type * Type -> TypeOp

rules

  is-op = ?LeastUpperBound(_,_)
  
  reduce-op(|sol): LeastUpperBound(a         , a         ) -> a
  reduce-op(|sol): LeastUpperBound(a         , TNoValue()) -> a
  reduce-op(|sol): LeastUpperBound(TNoValue(), a         ) -> a

signature constructors
  
  IsSubtype : Type * Type -> TypeOp // super type * sub type

rules

  is-op = ?IsSubtype(_,_)

  reduce-op(|sol): IsSubtype(a            , a         ) -> None()
  reduce-op(|sol): IsSubtype(_            , TNoValue()) -> None()
  
signature constructors
  
  IsSubtype : Type * List(Type) -> TypeOp // super type * List(sub type)

rules

  is-op = ?IsSubtype(_,_)

  reduce-op(|sol): IsSubtype(a, []               ) -> None()
  reduce-op(|sol): IsSubtype(a, [a | bs]         ) -> None() where <reduce-op(|sol)>IsSubtype(a, bs)
  reduce-op(|sol): IsSubtype(a, [TNoValue() | bs]) -> None() where <reduce-op(|sol)>IsSubtype(a, bs)
  
signature constructors
  
  IsType : Type -> TypeOp // super type * sub type

rules

  is-op = ?IsType(_)

  reduce-op(|sol): IsType(TBoolean() ) -> None()
  reduce-op(|sol): IsType(TDatetime()) -> None()
  reduce-op(|sol): IsType(TFloat()   ) -> None()
  reduce-op(|sol): IsType(TInt()     ) -> None()
  reduce-op(|sol): IsType(TString()  ) -> None()
  reduce-op(|sol): IsType(TNoValue() ) -> None()
  reduce-op(|sol): IsType(TEntity(_) ) -> None()
  
signature constructors
  
  GetType : Type -> TypeOp

rules // this is a hack to get the type of roles/shortcuts

  is-op = ?GetType(_)

  reduce-op(|sol): GetType(  TRole    (a, _)) -> a
  reduce-op(|sol): GetType(  TShortcut(a, _)) -> a
  reduce-op(|sol): GetType(a@TTuple   (_, _)) -> a
  
signature constructors
  
  GetShortcut : Type -> TypeOp

rules // this is a hack to do optional pattern matching... return None() if not patternmatch

  is-op = ?GetShortcut(_)

  reduce-op(|sol): GetShortcut(TShortcut(_, a)) -> a
  reduce-op(|sol): GetShortcut(TRole    (_, _)) -> None()
  reduce-op(|sol): GetShortcut(TTuple   (_, _)) -> None() 
