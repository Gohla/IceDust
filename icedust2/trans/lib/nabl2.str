module lib/nabl2

imports // functions

  api/_generated
  api/_runtime
  lib/debug
  lib/lists-tuples
  nabl2/api

signature constructors

  Namespace : String -> Namespace

  
rules // store analysis to be able to query without passing the analysis
  
  store-analysis: path -> None()
    with
      analysis := <nabl2-get-analysis>$[[<_project-path>]/[path]];
      rules(StoredAnalysis : None() -> analysis)
  
  get-stored-analysis = !None();StoredAnalysis <+ fatal-err(|"Error: Analysis is not stored. Please store with <store-analysis>path.")    

rules // wrap nabl2 api with stored analysis

  get-property(|prop)       = nabl2-get-property(|<get-stored-analysis>,prop)
  get-all-decls(|)          = nabl2-get-all-decls(|<get-stored-analysis>)
  get-all-refs(|)           = nabl2-get-all-refs(|<get-stored-analysis>)
  get-all-scopes(|)         = nabl2-get-all-scopes(|<get-stored-analysis>)
  get-ref-scope(|)          = nabl2-get-ref-scope(|<get-stored-analysis>)
  get-decl-scope(|)         = nabl2-get-decl-scope(|<get-stored-analysis>)
  get-scope-decls(|)        = nabl2-get-scope-decls(|<get-stored-analysis>)
  get-scope-refs(|)         = nabl2-get-scope-refs(|<get-stored-analysis>)
  get-scope-direct-edges(|) = nabl2-get-scope-direct-edges(|<get-stored-analysis>)
  get-scope-named-edges(|)  = nabl2-get-scope-named-edges(|<get-stored-analysis>)
  get-decl-assocs(|)        = nabl2-get-decl-assocs(|<get-stored-analysis>)
  get-scope-assocs(|)       = nabl2-get-scope-assocs(|<get-stored-analysis>)
  get-scope-reachables(|ns) = nabl2-get-scope-reachables(|<get-stored-analysis>, ns)

rules // compose nabl2 calls (hide occurrence behind namespaces)

  get-property(|ns, prop)           = nabl2-mk-occurrence(|ns);get-property(|prop)   //@type Term -> Term
  get-decl-assocs-with-labels(|ns)  = nabl2-mk-occurrence(|ns);get-decl-assocs       //@type Term -> List((Label,Scope))
  get-decl-assoc-with-labels(|ns)   = get-decl-assocs-with-labels(|ns);Hd            //@type Term -> (Label,Scope)
  get-decl-assocs(|ns)              = get-decl-assocs-with-labels(|ns);map(Snd)      //@type Term -> List(Scope)
  get-decl-assoc(|ns)               = get-decl-assocs(|ns);Hd                        //@type Term -> Scope
  get-decl-scope(|ns)               = nabl2-mk-occurrence(|ns);get-decl-scope        //@type Term -> Scope
  get-ref-scope(|ns)                = nabl2-mk-occurrence(|ns);get-ref-scope         //@type Term -> Scope
  get-scope(|ns)                    = get-decl-scope(|ns)+get-ref-scope(|ns)         //@type Term -> Scope
  get-scope-decl-names              = get-scope-decls;map(nabl2-get-occurrence-name) //@type Scope -> List(Term)
  get-scope-assoc-names-with-labels = get-scope-assocs;map(split2(nabl2-get-occurrence-name,id)) //@type Scope -> List((Term,Label))
  get-scope-assoc-name-with-label   = get-scope-assoc-names-with-labels;Hd           //@type Scope -> (Term, Label)
  get-scope-assoc-names             = get-scope-assoc-names-with-labels;map(Fst)     //@type Scope -> List(Term)
  get-scope-assoc-name              = get-scope-assoc-names;Hd                       //@type Scope -> Term
  get-scope-reachable-names(|ns)    = get-scope-reachables(|ns);map(nabl2-get-occurrence-name) //@type Scope -> List(Term)
  get-scope-direct-edge-scopes      = get-scope-direct-edges;map(Snd)                //@type Scope -> List(Scope)
  get-scope-direct-edge-scope       = get-scope-direct-edge-scopes;Hd                //@type Scope -> Scope

rules // stuff that depends on nabl2 internals

  /**
   * Get reachable declarations of a scope
   *
   * @param ns : String
   * @type Scope -> List(Occurrence)
   */
  nabl2-get-scope-reachables(|a, ns) = ?s;!Reachables(s,Namespace(ns));nabl2--get-names(|<nabl2--sol-g>a)
