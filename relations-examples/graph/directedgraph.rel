module directedgraph

model

entity Node{
	
}

relation Edge{
	Node * from
	Node * to
}

data

Node a{}
Node b{}
Node c{}
Edge ab{
	from:a
	to:b
}
Edge bc{
	from:b
	to:c
}
Edge ca{
	from:c
	to:a
}

execute

a
b
c
a > from]Edge[to // must be b
a > to]Edge[from // must be c
a > from]Edge[to > from]Edge[to // must be c
a > from]Edge[to > from]Edge[to > from]Edge[to // must be a