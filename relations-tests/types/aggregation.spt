module types-aggregation

language Relations

setup Common [[
	module test
	model
	data
	execute
]]

test type of aggr min		[[ [[min(4 :: 3)]] 				]] run get-type to Int
test type of aggr max		[[ [[max(4 :: 3 :: 8)]] 	]] run get-type to Int
test type of aggr avg 	[[ [[avg(1 :: 3)]] 				]] run get-type to Int
test type of aggr concat[[ [[concat("a" :: "b")]] ]] run get-type to String

test multiplicity of aggr min		[[ [[min(4 :: 3)]] 				]] run get-multiplicity to One
test multiplicity of aggr max		[[ [[max(4 :: 3 :: 8)]] 	]] run get-multiplicity to One
test multiplicity of aggr avg 	[[ [[avg(1 :: 3)]]				]] run get-multiplicity to One
test multiplicity of aggr concat[[ [[concat("a" :: "b")]] ]] run get-multiplicity to One

// TODO: add more testcases covering max(x:ZeroOrMore) : ZeroOrOne
