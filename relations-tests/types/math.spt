module types-math

language Relations

setup Common [[
	module test
	model
	data
	execute
]]

test type of plus	[[ [[1 + 3]] ]] run get-type to Int
test type of minus[[ [[3 - 2]] ]] run get-type to Int
test type of mult	[[ [[8 * 8]] ]] run get-type to Int
test type of div	[[ [[4 / 7]] ]] run get-type to Int
test type of mod	[[ [[8 % 3]] ]] run get-type to Int

test type of plus String [[ [["a" + "b"]] ]] run get-type to String

test error on Int plus String  [[ 1 + [["b"]] ]] 1 error
test error on Int minus String [[ 1 - [["b"]] ]] 1 error
test error on String mod String[[ [["a"]] % [["b"]] ]] 2 errors
test error on String div Int   [[ [["a"]] / 3 ]] 1 error


test multiplicity of One plus One	[[ [[1 + 3]] ]] run get-multiplicity to One
test multiplicity of One minus One[[ [[3 - 2]] ]] run get-multiplicity to One
test multiplicity of One mult One	[[ [[8 * 8]] ]] run get-multiplicity to One
test multiplicity of One div One	[[ [[4 / 7]] ]] run get-multiplicity to One
test multiplicity of One mod One	[[ [[8 % 3]] ]] run get-multiplicity to One

// TODO: add more testcases covering (x:ZeroOrOne + y:One) : ZeroOrOne

test error on One plus OneOrMore [[ 1 + [[(2 :: 3)]] ]] 1 error
