module weblabold

model

  entity Student {
    name : String
    
    passedCourses : Int = sum(enrollments.pass2)  
  }

  entity Course {
    name     : String
    avgGrade : Int? = avg( enrollments.grade )
    passPerc : Int? = 100 * sum(enrollments.pass2) /. count(enrollments)
  }

  entity Enrollment {
    name : String = course.name + " " +student.name
    
    pass  : Boolean = studentAssignment.pass
    pass2 : Int     = pass?1:0
    grade : Int?    = studentAssignment.grade
  }
  
  relation Course.enrollments * <-> 1 Enrollment.course
  relation Student.enrollments * <-> 1 Enrollment.student

  entity Assignment {
    name :  String
    
    gradeMinimum  : Int = 55 (default)
    gradeWeight   : Int = 1  (default)
    
    deadline      : Int? // day since start academic year
    extension     : Int?
    extensionDays : Int? = extension - deadline
    penalty       : Int? // for using the full extension
  }

  relation Submission {    
    name : String = student.name + " " + assignment.name

    grade        : Int    // between 10 (min) and 100 (max)
    date         : Int?
    extension    : Int? = assignment.extension (default)
    
    gradePanelty : Int? = assignment.penalty*lateDays/.assignment.extensionDays
    gradeReal    : Int? = onTime      ? grade :
                          onExtension ? grade - gradePanelty :
                          noValue
    
    lateDays     : Int? = date - assignment.deadline
    
    onTime       : Boolean = date <= assignment.deadline
                             <+ 
                             count(date)==1 || count(assignment.deadline)==0

    onExtension  : Boolean = date <= extension && !onTime
                             <+
                             count(date)==1 || count(extension)==0
    noValue : Int?
  }
  
  relation Submission.student 1 <-> * Student.submissions
  relation Submission.assignment 1 <-> * Assignment.submissions
  
  relation Course.assignment 1 <-> ? Assignment.course
  
  relation Assignment.whole ? <-> * Assignment.parts
  
  entity StudentAssignment {
    name : String? = enrollment.name //+ " " + assignment.name
    
    pass            : Boolean = passGrade && passParts
    
    passGrade       : Boolean = grade >= assignment.gradeMinimum <+ false
    passParts       : Boolean = conj( parts.pass ) <+ true 
    
    grade           : Int? = passParts ? (gradeSubmission <+ gradeParts) : noValue
    
    gradeWeighted   : Int? = grade * assignment.gradeWeight
    
    gradeSubmission : Int? = submission.gradeReal
    gradeParts      : Int? = count(parts)==count(parts.grade)
                             ? sum ( parts.gradeWeighted ) /. 
                               sum ( assignment.parts.gradeWeight )
                             : noValue
    
    noValue : Int?
  }
  
  relation StudentAssignment.whole ? <-> * StudentAssignment.parts
  
  relation StudentAssignment.enrollment ? <-> 1 Enrollment.studentAssignment

  relation StudentAssignment.submission ? <-> 1 Submission.studentAssignment
  
  relation StudentAssignment.assignment 1 <-> * Assignment.studentAssignments

data

  compiler : Course {
    name = "Compiler Construction"
    enrollments = 
      enA {
        student = alice {
          name = "Alice"
        }
      },
      enB {
        student = bob {
          name = "Bob"
        }
      },
      enC {
        student = charlie {
          name = "Charlie"
        }
      }
    assignment = 
      comp {
        name = "root"
        parts =
          exam {
            name = "exam"
            gradeWeight = 2
            gradeMinimum = 60
            submissions = 
              sa3 {
                student = alice
                grade = 60
              },
              sb3 {
                student = bob
                grade = 100
              },
              sc3 {
                student = charlie
                grade = 98
              }
            studentAssignments =
              aExam,
              bExam,
              cExam
          },
          practical {
            name = "practical"
            gradeWeight = 1
            gradeMinimum = 60
            parts =
              practicalA {
                name = "practicalA"
                gradeWeight = 2
                gradeMinimum = 50
                deadline = 7
                submissions = 
                  sa1 {
                    student = alice
                    grade = 50
                    date = 7
                  },
                  sb1 {
                    student = bob
                    grade = 50
                    date = 7
                  },
                  sc1 {
                    student = charlie
                    grade = 88
                    date = 7
                  }
                studentAssignments =
                  aPractA,
                  bPractA,
                  cPractA
              },
              practicalB {
                name="practicalB"
                gradeWeight = 3
                gradeMinimum = 50
                deadline = 14
                extension = 16
                penalty = 20
                submissions = 
                  sa2 {
                    student = alice
                    grade = 90
                    date = 13
                  },
                  sb2 {
                    student = bob
                    grade = 60
                    date = 10
                  },
                  sc2 {
                    student = charlie
                    grade = 76
                    date = 15
                  }
                studentAssignments =
                  aPractB,
                  bPractB,
                  cPractB
              }
            studentAssignments =
              aPract,
              bPract,
              cPract
          }
        studentAssignments =
          aComp {
            enrollment = enA 
            parts = 
              aExam { submission = sa3 },
              aPract {
                parts =
                  aPractA { submission = sa1 },
                  aPractB { submission = sa2 }
              }
          },
          bComp {
            enrollment = enB 
            parts = 
              bExam { submission = sb3 },
              bPract {
                parts =
                  bPractA { submission = sb1 },
                  bPractB { submission = sb2 }
              }
          },
          cComp {
            enrollment = enC 
            parts = 
              cExam { submission = sc3 },
              cPract {
                parts =
                  cPractA { submission = sc1 },
                  cPractB { submission = sc2 }
              }
          }
      }
  } 

execute

  "Alice's compiler pass & grade:"
  enA.pass
  enA.grade
  
  ""
  "Bob's compiler pass & grade:"
  enB.pass
  enB.grade

  ""
  "Charlie's compiler pass & grade:"
  enC.pass
  enC.grade

  ""
  "The average of all student grades:"
  compiler.avgGrade
  "Pass percentage:"
  compiler.passPerc
    