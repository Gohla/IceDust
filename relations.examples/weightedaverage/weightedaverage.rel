module weightedaverage

model

  entity AvgNode {
    weight : Int ?
    value  : Int = valueWeightedChildren /. weightChildren <+ 0
    
    valueWeighted : Int = (weight<+0) * value
    
    valueWeightedChildren : Int = sum( child.valueWeighted ++ leafChild.valueWeighted )
    weightChildren        : Int = sum( child.weight        ++ leafChild.weight        )
  }
  
  entity ValNode {
    weight : Int
    value  : Int
    
    valueWeighted : Int = weight * value
  }

  relation Tree {
    AvgNode * parent
    AvgNode 1 child
  }

  relation TreeLeaf {
    AvgNode * leafParent
    ValNode 1 leafChild
  }
  
data

  ValNode v1{value=100 weight=2}
  ValNode v2{value=500 weight=3}
  ValNode v3{value=228 weight=1}
  ValNode v4{value=332 weight=1}
  ValNode v5{value=376 weight=1}
  AvgNode a1{weight=10}
  AvgNode a2{weight=15}
  AvgNode a3{}
  Tree{child:a1 parent:a3}
  Tree{child:a2 parent:a3}
  TreeLeaf{leafChild:v1 leafParent:a1}
  TreeLeaf{leafChild:v2 leafParent:a1}
  TreeLeaf{leafChild:v3 leafParent:a2}
  TreeLeaf{leafChild:v4 leafParent:a2}
  TreeLeaf{leafChild:v5 leafParent:a2}

execute

  a3.value