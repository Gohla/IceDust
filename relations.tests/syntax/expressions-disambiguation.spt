module syntax-expressions-disambiguation

language Relations

setup Common [[
	module test
	
	model
	entity Node{
		name : String ?
	}
	relation Edge{
		Node * in  <- in
		Node * out <- out
		in.a <-> out.b
	}
	
	data
	Node n{}
	
	execute
]]

test Disambiguate left associative multiplication [[21 * 14 * 14]] parse to [[(21 * 14) * 14]]
test Disambiguate left associative division [[21 / 14 / 14]] parse to [[(21 / 14) / 14]]
test Disambiguate left associative modulo [[21 % 14 % 14]] parse to [[(21 % 14) % 14]]

test Disambiguate left associative addition [[21 + 14 + 14]] parse to [[(21 + 14) + 14]]
test Disambiguate left associative subtraction [[21 - 14 - 14]] parse to [[(21 - 14) - 14]]
test Disambiguate left associative addition and subtraction   [[21 + 14 - 14]] parse to [[(21 + 14) - 14]]
test Disambiguate left associative addition and subtraction 2 [[21 - 14 + 14]] parse to [[(21 - 14) + 14]]
test Disambiguate left associative mul div mod [[1 * 2 / 3 % 4]] parse to [[((1 * 2) / 3) % 4]]

test Disambiguate mult over plus [[2 + 3 * 4]] parse to [[2 + (3 * 4)]]
test Disambiguate div over plus  [[2 + 3 / 4]] parse to [[2 + (3 / 4)]]
test Disambiguate mod over minus [[2 - 3 % 4]] parse to [[2 - (3 % 4)]]

test Disambiguate left associative choice [[21 <+ 14 <+ 14]] parse to [[(21 <+ 14) <+ 14]]
test Disambiguate left associative merge  [[21 ++ 14 ++ 14]] parse to [[(21 ++ 14) ++ 14]]

test Disambiguate plus over merge   [[2 ++ 3 + 4]] parse to [[2 ++ (3 + 4)]]
test Disambiguate mult over choice  [[2 <+ 3 * 4]] parse to [[2 <+ (3 * 4)]]
test Disambiguate merge over choice [[2 <+ 3 ++ 4]] parse to [[2 <+ (3 ++ 4)]]

test Disambiguate member access over merge [[ 
		n.in.out.name
	++n.out.in.name
]]

test Disambiguate large expression [[5 * 8 - 5 <+ 3 ++ 0 * 9]] parse to [[((5*8)-5) <+ (3++(0*9))]]
test Disambiguate large expression 2 [["a"+"b"+"c"+"d"+"e"]] parse to [[((("a"+"b")+"c")+"d")+"e"]]

// http://yellowgrass.org/issue/SPTWithCore/1
