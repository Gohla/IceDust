module types-references-attributes-direct

language Relations

setup Common [[
	module test
]]


test type of ref attribute (Identifier) [[
	model
	entity X{
		i : Int = [[i]]
	}
]] run get-type to Int

test type of ref this.attribute [[
	model
	entity X{
		i : Int = [[this.i]]
	}
]] run get-type to Int

test type of ref entity.attribute [[
	model
	entity X{
		i : Int = [[x.i]] (default)
	}
	
	data
	x : X {
		i=3
	}
]] run get-type to Int

test type of ref role.attribute [[
	model
	entity Node{
		i : Int = [[this.in.out.i]]
	}
	relation Edge{
		Node 1 in  <- in
		Node 1 out <- out
		in.a <-> out.b
	}
]] run get-type to Int


test multiplicity of ref attribute (Identifier) One [[
	model
	entity X{
		i : Int = [[i]]
	}
]] run get-multiplicity to One

test multiplicity of ref attribute (Identifier) ZeroOrOne [[
	model
	entity X{
		i : Int ? = [[i]]
	}
]] run get-multiplicity to ZeroOrOne

test multiplicity of ref this.attribute One [[
	model
	entity X{
		i : Int = [[this.i]]
	}
]] run get-multiplicity to One

test multiplicity of ref this.attribute ZeroOrOne [[
	model
	entity X{
		i : Int ? = [[this.i]]
	}
]] run get-multiplicity to ZeroOrOne

test multiplicity of ref entity.attribute One [[
	model
	entity X{
		i : Int = [[x.i]] (default)
	}
	
	data
	x : X {
		i=3
	}
]] run get-multiplicity to One

test multiplicity of ref entity.attribute ZeroOrOne [[
	model
	entity X{
		i : Int ? = [[x.i]]
	}
	
	data
	x : X {}
]] run get-multiplicity to ZeroOrOne

test ordering of ref entity.attribute Ordered [[
	model
	entity X{
		i : Int ? = [[x.i]]
	}
	
	data
	x : X {}
]] run get-ordering to Ordered
