module types-references-attributes-indirect

language Relations

setup Common [[
	module test
]]


test multiplicity of ref role.attribute ZeroOrOne ZeroOrOne [[
	model
	entity Node{
		i : Int = [[this.in.out.j]] <+ 0
		j : Int ?
	}
	relation Edge{
		Node.in ?  -> in
		Node.out 1 -> out
		in.a <-> out.b
	}
]] run get-multiplicity to ZeroOrOne

test multiplicity of ref role.attribute ZeroOrOne One [[
	model
	entity Node{
		i : Int = [[this.in.out.i]] <+ 0
	}
	relation Edge{
    Node.in ?  -> in
    Node.out 1 -> out
		in.a <-> out.b
	}
]] run get-multiplicity to ZeroOrOne

test multiplicity of ref role.attribute One ZeroOrOne [[
	model
	entity Node{
		i : Int = [[this.in.out.j]] <+ 3
		j : Int ?
	}
	relation Edge{
    Node.in 1  -> in
    Node.out 1 -> out
		in.a <-> out.b
	}
]] run get-multiplicity to ZeroOrOne

test multiplicity of ref role.attribute One One [[
	model
	entity Node{
		i : Int = [[this.in.out.i]]
	}
	relation Edge{
    Node.in 1  -> in
    Node.out 1 -> out
		in.a <-> out.b
	}
]] run get-multiplicity to One

test multiplicity of ref role.attribute ZeroOrMore ZeroOrOne [[
	model
	entity Node{
		i : Int = max( [[this.in.out.j]] ) <+ 0
		j : Int ?
	}
	relation Edge{
    Node.in *  -> in
    Node.out 1 -> out
		in.a <-> out.b
	}
]] run get-multiplicity to ZeroOrMore

test multiplicity of ref role.attribute ZeroOrMore One [[
	model
	entity Node{
		i : Int = max( [[this.in.out.i]] ) <+ 0
	}
	relation Edge{
    Node.in *  -> in
    Node.out 1 -> out
		in.a <-> out.b
	}
]] run get-multiplicity to ZeroOrMore

test multiplicity of ref role.attribute OneOrMore ZeroOrOne [[
	model
	entity Node{
		i : Int = max( [[this.in.out.j]] ) <+ 0
		j : Int ?
	}
	relation Edge{
    Node.in +  -> in
    Node.out 1 -> out
		in.a <-> out.b
	}
]] run get-multiplicity to ZeroOrMore

test multiplicity of ref role.attribute OneOrMore One [[
	model
	entity Node{
		i : Int = max( [[this.in.out.i]] ) <+ 0
	}
	relation Edge{
    Node.in +  -> in
    Node.out 1 -> out
		in.a <-> out.b
	}
]] run get-multiplicity to OneOrMore

test ordering of ref role.attribute Unordered Ordered [[
	model
	entity Node{
		i : Int = max( [[this.in.out.i]] ) <+ 0
	}
	relation Edge{
		Node.in + (unordered) -> in
		Node.out 1 (unordered) -> out
		in.a <-> out.b
	}
]] run get-ordering to Unordered

test ordering of ref role.attribute Ordered Ordered [[
	model
	entity Node{
		i : Int = max( [[this.in.out.i]] ) <+ 0
	}
	relation Edge{
    Node.in + (ordered) -> in
    Node.out 1 (ordered) -> out
		in.a <-> out.b
	}
]] run get-ordering to Ordered
