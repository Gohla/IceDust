module types-references-relations

language Relations

setup Common [[
	module test
	model
  	entity Node{}
  	relation Node.maybe ? <-> 1 Node.one
  	relation Node.star * <-> + (ordered) Node.plus
  data
    n : Node {
      maybe = n2 { }
      star  = n2
    }
	execute
]]

test type of relation						      	[[ [[n.maybe]] ]] 					run get-type to "Node"{_}
test type of relation relation 	  			[[ [[n.maybe.one]] ]] 			run get-type to "Node"{_}
test type of relation relation relation	[[ [[n.maybe.one.star]] ]]	run get-type to "Node"{_}

test multiplicity of relation ZeroOrOne	[[ [[n.maybe]] ]] run get-multiplicity to ZeroOrOne
test multiplicity of relation One				[[ [[n.one]] ]] 	run get-multiplicity to One
test multiplicity of relation ZeroOrMore	[[ [[n.star]] ]]	run get-multiplicity to ZeroOrMore
test multiplicity of relation OneOrMore	[[ [[n.plus]] ]]	run get-multiplicity to OneOrMore

test multiplicity of relation relation ZeroOrOne 	[[ [[n.maybe.maybe]] ]] run get-multiplicity to ZeroOrOne
test multiplicity of relation relation ZeroOrOne 2	[[ [[n.maybe.one]]  ]] run get-multiplicity to ZeroOrOne

test ordering of relation Unordered		[[ [[n.star]] ]] run get-ordering to Unordered
test ordering of relation Ordered	  	[[ [[n.plus]] ]] run get-ordering to Ordered
