module Model

imports
	Common
	Expressions
	Types

context-free syntax // entities

	Model.Entity = <
		entity <ID> {
			<{Member "\n"}*>
		}
	>
  Model.FirstClassRelation = <
    relation <ID> {
      <{Member "\n"}*>
    }
  >
	EntityOrRelation.EntityType = <entity>
	EntityOrRelation.RelationType = <relation>

context-free syntax // shortcut relations

  Model.ShortcutRelation = [
    relation [EntityRef].[ID] [Multiplicity?] [Ordering] <-> [Multiplicity?] [Ordering] [EntityRef].[ID] {
      [{Attribute "\n"}*]
    }
  ]

context-free syntax // non-first-class relation

  Model.Relation = [
    relation [EntityRef].[ID] [Multiplicity?] [Ordering] <-> [Multiplicity?] [Ordering] [EntityRef].[ID]
  ]

context-free syntax // entity members

	Member											  = <<Attribute>>
	Member										  	= <<Role>>
	Member										  	= <<Shortcut>>

  Attribute.Attribute           = <<ID> : <PrimitiveType><Multiplicity?>>
  Attribute.DerivationAttribute = <<ID> : <PrimitiveType><Multiplicity?> = <Exp>>
  Attribute.DefaultAttribute    = <<ID> : <PrimitiveType><Multiplicity?> = <Exp> (default)>
	DerivationType.DefaultValue  	= <(default)>
	DerivationType.Derivation		  = <>

  Role.Role                     = <<ID><Inverse?> <Multiplicity> <Ordering> <RoleName?>>
  Inverse                       = <.<ID>>
  RoleName                      = <-\> <ID>>

	Shortcut.Shortcut					  	= <<RoleRef>.<ID> \<-\> <RoleRef>.<ID>>

context-free syntax // specific references
	
	EntityRef.EntityRef 				  = ID
	AttributeRef.AttributeRef     = ID
	RoleRef.RoleRef						  	= ID
	MemberRef.MemberRef           = ID // attr or shortcut
