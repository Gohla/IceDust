module trans/_editor/debug

imports // constructors

	trans/api/_runtime-constructors
	
imports // functions

	trans/api/_runtime
	trans/desugaring/desugar
	trans/prettyprinting/pp

imports // generated
	
	lib/editor-common.generated
	
rules // Debugging builders
	
	// Prints the abstract syntax ATerm of a selection.
	debug-show-aterm:
		(selected, position, ast, path, project-path) -> (filename, result)
		with
			filename := <guarantee-extension(|"aterm")> path;
			result	 := selected

	// Prints the analyzed annotated abstract syntax ATerm of a selection.
	debug-show-desugared:
		(selected, position, ast, path, project-path) -> (filename, result)
		with
			ast'                    := <desugar-all> ast;
			filename := <guarantee-extension(|"desugared.aterm")> path;
			result   := ast'
			
	// Prints the analyzed annotated abstract syntax ATerm of a selection.
	debug-show-analyzed:
		(selected, position, ast, path, project-path) -> (filename, result)
		with
			filename := <guarantee-extension(|"analyzed.aterm")> path;
			result	 := ast
			
	debug-show-analyzed-resolved:
		(selected, position, ast, path, project-path) -> (filename, result)
			where
	    	language := <language>;
	    	_index-setup(|language, project-path);
	    	_task-setup(|project-path)
			with
				filename := <guarantee-extension(|"analyzed.aterm")> path;
				ast'		 := <bottomup(try(id{bottomup(try(_give-task-results))}))>ast;
				ast''		 := <bottomup(try(id{bottomup(try(rm-annotations);try(_pp-uri;string-replace(|"\"","")))}))>ast';
				result	 := ast''

	debug-show-analyzed-resolved2 = debug-show-analyzed-resolved;bottomup(try(no-use-def))
				
	no-use-def: a{Use(_)} -> a{}
	no-use-def: a{Def(_)} -> a{}

	debug-properties:
		(target, position, ast, path, project-path) -> (filename, result)
			where
	    	language := <language>;
	    	_index-setup(|language, project-path);
	    	_task-setup(|project-path);
				filename := <guarantee-extension(|"properties.txt")> path;
				result:=
					<map(\(a,b)->$[[a]: [b]]\);try(separate-by(|"\n");concat-strings)>
					<_get-editor-properties(pp-partial-Relations-string|<language>,project-path)>target
	
	debug-show-origin:
		(target, position, ast, path, project-path) -> None()
			with
				<_origin-debug-all>target
	
	debug-index-project =
		_analysis-debug-index-project(|<language>)
	debug-index-project-resolve = 
		_analysis-debug-index-project-resolve(|<language>)
	debug-index-project-resolve-ast:
    	(_, _, _, path, project-path) -> (filename, result)
	    with
	    	language := <language>;
	    	_index-setup(|language, project-path);
	    	_task-setup(|project-path);
	    	result-ast := <_index-get-all-partitions; map(\f -> (f, <_index-get-all-in-partition> f)\)>;
	    	result-ast' := <_beautify-indices> result-ast;
			  filename := $[[project-path]/[<dirname> path]/index.project.aterm];
			  result   := result-ast'
	debug-index-partition =
		_analysis-debug-index-partition(|<language>)
	debug-index-selection-partition =
		_analysis-debug-index-partition-resolve(|<language>)

	debug-task-project =
		_analysis-debug-task-project(|<language>)
	debug-task-partition =
		_analysis-debug-task-partition(|<language>)
	debug-task-selection =
		_analysis-debug-task-selection(|<language>)
		
	debug-project =
		_analysis-debug-project(|<language>)
	debug-partition =
		_analysis-debug-partition(|<language>)
		
	debug-reanalyze = 
		_analysis-debug-reanalyze(|<language>)