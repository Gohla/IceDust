module trans/analysis/rules

imports // constructors
	
	src-gen/signatures/Rules-sig
	src-gen/signatures/Types-sig
	
rules // transform to only match: drop al rhs
	
	to-match = rule-to-match <+ rulebody-to-match <+ subrule-to-match
	
	rule-to-match:
		Rule(name, params, body) ->
		SubRule(One(), body')
			with
				body' := <rulebody-to-match>body

	rulebody-to-match:
		RuleBody(lhs, rhs,    sub) ->
		RuleBody(lhs, None(), sub')
			with
				sub' := <map(subrule-to-match)>sub
	
	subrule-to-match:
		SubRule(mult, body) ->
		SubRule(mult, body')
			with
				body' := <rulebody-to-match>body

// rules // normalize match: (1) remove all edge chains (2) make all nodes that need to be matched explicit (3) remove all duplicates
// 	
// 	rule-to-normalized:
// 		Rule(name, params, body) ->
// 		Rule(name, params, body')
// 			with
// 				body' := <rulebody-to-normalized>body
// 
// 	rulebody-to-normalized:
// 		RuleBody(lhs, nhs, rhs, sub) ->
// 		RuleBody(lhs, nhs, rhs, sub')
// 			with
// 				sub' := <map(subrule-to-normalized)>sub
// 	
// 	subrule-to-normalized:
// 		SubRule(mult, body) ->
// 		SubRule(mult, body')
// 			with
// 				body' := <rulebody-to-normalized>body

