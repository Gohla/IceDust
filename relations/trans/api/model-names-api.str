module api/model-names-api

imports // constructors

	signatures/Model-sig
	api/_runtime-constructors
	api/constructors
	desugaring/constructors
  names/naming/names
	analysis2/constructors

imports // functions

	api/_runtime
	api/module-names-api
	lib/origin
	lib/search
	lib/string
  lib/index
  lib/nabl-ext

rules // entity

	is-entityname = where(is-string;_nabl-uri;_nabl-uri-namespace;?NablNsEntity())

	entityname-get-attributenames = _nabl-get-child-definitions(|NablNsAttribute()) ;map(def-to-name); string-sort-anno
  entityname-get-relationnames  = _nabl-get-child-definitions(|NablNsRelation())  ;map(def-to-name); string-sort-anno
	entityname-get-rolenames      = _nabl-get-child-definitions(|NablNsRole())      ;map(def-to-name); string-sort-anno
	entityname-get-inversenames   = _nabl-get-child-definitions(|NablNsInverse())   ;map(def-to-name); string-sort-anno
	entityname-get-shortcutnames  = _nabl-get-child-definitions(|NablNsShortcut())  ;map(def-to-name); string-sort-anno
	
	entityname-get-modulename = nabl-name-parent
	
  entityname-is-calconread           = where(entityname-get-modulename;modulename-is-calconread)
  entityname-is-calconwrite          = where(entityname-get-modulename;modulename-is-calconwrite)
  entityname-is-eventuallyconsistent = where(entityname-get-modulename;modulename-is-eventuallyconsistent)
	
rules // attributes
	
	is-attributename = where(is-string;_nabl-uri;_nabl-uri-namespace;?NablNsAttribute())
	
	attributename-is-derivation = where(get-derivation-type;?Derivation())
	attributename-is-default    = where(get-derivation-type;?DefaultValue())
	attributename-is-normal     = where(get-derivation-type;?Normal())
	
	attributename-get-entityname = nabl-name-parent
	
	attributename-get-expr = index-get-prop(|AST());Hd
	
  attributename-is-calconread           = where(attributename-get-entityname;entityname-is-calconread)
  attributename-is-calconwrite          = where(attributename-get-entityname;entityname-is-calconwrite)
  attributename-is-eventuallyconsistent = where(attributename-get-entityname;entityname-is-eventuallyconsistent)

rules // relations

  is-relationname = where(is-string;_nabl-uri;_nabl-uri-namespace;?NablNsRelation())
  
  relationname-get-inversename = get-inverse
  
  relationname-is-left = where(get-side;?Left())

rules // roles
	
	is-rolename = where(is-string;_nabl-uri;_nabl-uri-namespace;?NablNsRole())
	
	rolename-get-inversename = get-inverse
	
rules // inverses
	
	is-inversename = where(is-string;_nabl-uri;_nabl-uri-namespace;?NablNsInverse())

	inversename-get-rolename = get-origin-role

rules

  name-get-inversename = where(is-relationname);relationname-get-inversename
  name-get-inversename = where(is-rolename)    ;rolename-get-inversename
  name-get-inversename = where(is-inversename) ;inversename-get-rolename

rules // shortcuts

	is-shortcutname = where(is-string;_nabl-uri;_nabl-uri-namespace;?NablNsShortcut())
	
	shortcutname-get-rolename1          = get-origin-role
	shortcutname-get-rolename2          = get-origin-role2
	
	shortcutname-get-inversename        = shortcutname-get-rolename1;rolename-get-inversename
	shortcutname-get-rolename           = shortcutname-get-rolename2
	shortcutname-get-inverseandrolename = ?s;!(<shortcutname-get-inversename>s, <shortcutname-get-rolename>s)

rules // combined
	
	name-get-flowsto-paths = index-get-prop(|FlowsTo())

rules // helper

	def-to-name: d@Def(uri) -> name{d} with	name := <_nabl-uri-name>uri

rules
	