module trans/checking/check

imports

	lib/editor-common.generated
	lib/nabl/-
	lib/properties/-
	lib/task/-
	lib/types/-

	include/Relations
	
	trans/desugaring/desugar
	trans/naming/names

rules
	
	constraint-warning:
		EntityTypeDef(_, x, _) -> (x, $[Entity type names must start with a capital])
		where
			not(<string-starts-with-capital> x)

	// constraint-note:	e@Navigator(_, _)	-> (e, $[This is not translated to java yet.])

	constraint-error: EntityTypeDef(EntityType(), _, attributesAndRoles) -> <map(no-role);concat> attributesAndRoles
	no-role: x@Role(_,_,_) -> [(x, $[An entity cannot have roles.])]
	no-role: Attribute(_,_,_) -> []

rules // Check derivation types of attributes
	
	// Task-engine version	
	nabl-constraint(|ctx):
		x@AttributeValue(AttributeName(_, name), _) -> <fail>
		with
			prop-task := <prop-create-lookup(|ctx, NablProp_derivation-type())> name;
			match     := <derivation-type-match(|ctx, Derivation())> prop-task;
			<task-create-error-on-success(|ctx, match, "Derivations cannot be assigned custom values.")> x

rules // Only relations allowed in navigators
	
	nabl-constraint(|ctx):
		NavigateIn(_, NavOr(), _, EntityType(entityType)) -> <fail>
		with
			prop-task := <prop-create-lookup(|ctx, NablProp_is-relation())> entityType;
			<task-create-error-on-failure(|ctx, prop-task, $[Type error: [entityType] is an entity, a relation is expected.])> entityType
