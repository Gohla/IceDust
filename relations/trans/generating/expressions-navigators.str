module trans/generating/expressions-navigators

imports

	include/Relations
	lib/java/Java
	
	trans/naming/names
	trans/generating/expressions

rules 

	nav-to-java(err): NavigateIn(prevNav, _, RoleName(roleInName), EntityType(relationName)) ->
		Invoke(
      Method(MethodName(AmbName(Id(relationName)), Id($[[roleInName]_in])))
    , [<wrap-prev-to-java(err)>prevNav]
    )
  
  nav-to-java(err): NavigateOut(prevNav, _, EntityType(relationName), RoleName(roleOutName)) ->
		Invoke(
		  Method(MethodName(AmbName(Id(relationName)), Id($[[roleOutName]_out])))
		, [ <wrap-prev-to-java(err)>prevNav ]
		)

rules
	
	wrap-prev-to-java(err): prevNav -> result
		where
			One() := <get-multiplicity>prevNav <+
			ZeroOrOne() := <get-multiplicity>prevNav
		with
			result :=
				Invoke(
				   Method(MethodName(AmbName(Id("Expressions")), Id("toCollection")))
				 , [<exp-to-java(err)>prevNav]
				 )
	
	wrap-prev-to-java(err): prevNav -> <exp-to-java(err)>prevNav
		where
			OneOrMore() := <get-multiplicity>prevNav <+
			ZeroOrMore() := <get-multiplicity>prevNav
			
