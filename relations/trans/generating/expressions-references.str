module trans/generating/expressions-references

imports
	
	lib/nabl/interface
	lib/nabl/uri
	lib/types/query

	include/Relations
	lib/java/Java
	
	trans/naming/names
	trans/generating/expressions

rules // attributes of expressions
     
	ref-to-java(err): AttributeName(exp, name) -> result
		where
			One()       := <get-multiplicity>exp <+
			ZeroOrOne() := <get-multiplicity>exp <+
			This()      := exp //an un-typed This(): unqualified attribute reference
		with
			result :=
				Invoke(
					Method(
				      <exp-to-java(err)>exp
				    , None()
				    , Id($[get_[name]])
				    )
				  , []
				)

	ref-to-java(err): AttributeName(exp, name) -> result
		where
			ZeroOrMore():= <get-multiplicity>exp <+
			OneOrMore() := <get-multiplicity>exp
		with
			exp-ty := <get-type>exp
		with
			result :=
				Invoke(
				  Method(MethodName(AmbName(Id(exp-ty)), Id($[get_[name]])))
				, [ <exp-to-java(err)>exp ]
				)

rules // direct references

	ref-to-java(err): Identifier(entityName) -> ExprName(Id(entityName))
		where
			NablNsEntity() := <nabl-uri;nabl-uri-namespace>entityName
				 
	ref-to-java(err): Identifier(name) -> result
		where
			NablNsAttribute() := <nabl-uri;nabl-uri-namespace>name
		with
			result := <ref-to-java(err)>AttributeName(This(), name) //forward to this.name
			
	ref-to-java(err): This() -> This()
