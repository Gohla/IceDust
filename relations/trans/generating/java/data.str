module generating/java/data

imports // constructors

	java/Java
	signatures/Data-sig
	signatures/Expressions-sig
	signatures/Model-sig
	signatures/Modules-sig

imports // functions

  api/data-names-api
  api/model-names-api
  api/module-names-api
  generating/_ir/model
	generating/java/expressions
  names/naming/names
  naming/_notNaBL

rules
 
  data-modulename-to-java-stms(err): moduleName -> result
    with
      eiNames  := <modulename-get-entityinstancenames>moduleName;
//      <map(debug)>eiNames;
      result1* := < map(entityinstancename-to-java-stm(err))>eiNames;
      result2* := <fmap(entityinstancename-to-java-stms2(err))>eiNames
    with
      result := bstm* |[
        ~result1*
        ~result2*
      ]|

rules

  entityinstancename-to-java-stm(err): x_eiName -> result
    with
      x_type := <_get-type>x_eiName
    with
      result := bstm |[
        x_type x_eiName = new x_type();
      ]|

  entityinstancename-to-java-stms2(err): x_eiName -> result
    with
      result1* := <entityinstancename-get-attributevaluenames;fmap(attributevaluename-to-java-stms(err))>x_eiName;
      result2* := <entityinstancename-get-relationvaluenames ;fmap(relationvaluename-to-java-stms (err))>x_eiName;
      result3* := <entityinstancename-get-shortcutvaluenames ;fmap(shortcutvaluename-to-java-stms (err))>x_eiName
    with
      result := bstm* |[
        ~result1*
        ~result2*
        ~result3*
      ]|

rules
  
  attributevaluename-to-java-stms(err): x_attributevalueName -> result
    where
      membervaluename-is-attribute
    with
      x_eiName := <membervaluename-get-entityinstancename>x_attributevalueName;
      x_setter := <name-set>x_attributevalueName;
      valueAst := <membervaluename-get-expr>x_attributevalueName;
      (_, attributeValueJava) := <exp-to-java-stm(err|0)>valueAst
    with
      result := bstm* |[
        x_eiName.x_setter(~attributeValueJava);
      ]|
      
  relationvaluename-to-java-stms(err): x_relationvalueName -> result
    where
      membervaluename-is-relation
    with
      x_eiName   := <membervaluename-get-entityinstancename>x_relationvalueName;
      valueNames := <membervaluename-get-values>x_relationvalueName;
      result     := <map(data-relationname-to-java-stm(err|x_eiName, x_relationvalueName))>valueNames//;

  shortcutvaluename-to-java-stms(err): x_shortcutvalueName -> result
    where
      membervaluename-is-shortcut
    with
      x_eiName := <membervaluename-get-entityinstancename>x_shortcutvalueName;
      valueAst := <membervaluename-get-expr>x_shortcutvalueName;
      valueNames := <membervalue-getall-einames>valueAst;
      result := <fmap(data-shortcutname-to-java-stms(err|x_eiName, x_shortcutvalueName))>valueNames

rules

  data-relationname-to-java-stm(err|x_eiName,relationName): x_eiName2 -> result
    with
      x_set := <name-set>relationName;
      x_add := <name-add>relationName;
      if <get-member-origin;get-multiplicity;upper-one>relationName then
        result := java:block-stm |[
          x_eiName.x_set(x_eiName2);
        ]|
      else
        result := java:block-stm |[
          x_eiName.x_add(x_eiName2);
        ]|
      end

  data-shortcutname-to-java-stms(err|x_eiName,shortcutName): (relName, x_eiName2) -> [result0*,result1*]
    with
      x_roleName1    := <get-member-origin;shortcutname-get-rolename1>shortcutName;
      x_roleName2    := <get-member-origin;shortcutname-get-rolename2>shortcutName;
      x_relationType := <attributename-get-entityname>x_roleName1;
      x_inverseName1 := <rolename-get-inversename>x_roleName1;
      x_inverseName2 := <rolename-get-inversename>x_roleName2;
      x_set01        := <name-set>x_roleName1;
      x_set02        := <name-set>x_roleName2;
      x_set1         := <name-set>x_inverseName1;
      x_set2         := <name-set>x_inverseName2;
      x_add1         := <name-add>x_inverseName1;
      x_add2         := <name-add>x_inverseName2
    with
      if(None() := relName) then
        x_relationObject := $[[x_eiName]_[x_eiName2]_[x_relationType]]
      else
        x_relationObject := relName
      end
    with
      if(None() := relName) then
        result0* := java:block-stm* |[
          x_relationType x_relationObject = new x_relationType();
        ]|
      else
        result0* := []
      end
    with
      result1* := java:block-stm* |[
        x_relationObject.x_set01(x_eiName);
        x_relationObject.x_set02(x_eiName2);
      ]|
