module generating/java/data

imports // constructors

	java/Java
	signatures/Data-sig
	signatures/Expressions-sig
	signatures/Model-sig
	signatures/Modules-sig

imports // functions

  api/data-names-api
  api/model-names-api
  api/module-names-api
	generating/java/expressions
  names/naming/names

rules
 
  data-modulename-to-java-stms(err): moduleName -> [result1*, result2*]
    with
      eiNames := <modulename-get-entityinstancenames>moduleName;
      result1* := <map(entityinstancename-to-java-stm(err))>eiNames;
      result2* := <map(entityinstancename-to-java-stms2(err));flatten-list>eiNames

rules

  entityinstancename-to-java-stm(err): x_eiName -> result
    with
      x_type := <_get-type>x_eiName;
      result := |[
        x_type x_eiName = new x_type();
      ]|

  entityinstancename-to-java-stms2(err): eiName -> result
    with
      memberValues := <entityinstancename-get-membervalues>eiName;
      result := <map(membervalue-to-java-stms(err|eiName));flatten-list>memberValues

rules

  membervalue-to-java-stms(err|x_eiName): MemberValue(MemberRef(memberName), valueAst) -> result
    where
      <is-attributename>memberName
    with
      x_setter := $[set_[memberName]];
      (_, attributeValueJava) := <exp-to-java-stm(err|0)>valueAst;
      result := java:block-stm* |[
        x_eiName.x_setter(~attributeValueJava);
      ]|    
          
  membervalue-to-java-stms(err|x_eiName): MemberValue(MemberRef(shortcutName), valueAst) -> result
    where
      <is-shortcutname>shortcutName
    with
      valueNames := <collect-all(eiwrefnames)>valueAst;
      result := <map(data-shortcutname-to-java-stms(err|x_eiName,shortcutName));flatten-list>valueNames

rules

  eirefname: EntityInstanceRef(name) -> name
  eiwrefnames: EntityInstanceWrapper(RelationInstance(EntityInstanceRef(relname)), EntityInstanceRef(name)) -> (relname,name)
  eiwrefnames: EntityInstanceWrapper(None(), EntityInstanceRef(name))                                       -> (None(),name)

rules

  data-shortcutname-to-java-stms(err|x_eiName,shortcutName): (relName, x_eiName2) -> [result0*,result1*]
    with
      x_roleName1    := <shortcutname-get-rolename1>shortcutName;
      x_roleName2    := <shortcutname-get-rolename2>shortcutName;
      x_relationType := <attributename-get-entityname>x_roleName1;
      x_inverseName1 := <rolename-get-inversename>x_roleName1;
      x_inverseName2 := <rolename-get-inversename>x_roleName2;
      x_set01        := $[set_[x_roleName1]];
      x_set02        := $[set_[x_roleName2]];
      x_set1         := $[set_[x_inverseName1]];
      x_set2         := $[set_[x_inverseName2]];
      x_add1         := $[add_[x_inverseName1]];
      x_add2         := $[add_[x_inverseName2]];
      if(None() := relName) then
        x_relationObject := $[[x_eiName]_[x_eiName2]_[x_relationType]]
      else
        x_relationObject := relName
      end;
      if(None() := relName) then
        result0* := java:block-stm* |[
          x_relationType x_relationObject = new x_relationType();
        ]|
      else
        result0* := []
      end;
      result1* := java:block-stm* |[
        x_relationObject.x_set01(x_eiName);
        x_relationObject.x_set02(x_eiName2);
      ]|
