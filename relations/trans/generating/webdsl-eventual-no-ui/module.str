module generating/webdsl-eventual-no-ui/module

imports // constructors

  webdsl/constructors
  webdsl/WebDSL
  desugaring/constructors

imports // functions
  
  generating/webdsl-eventual-no-ui/model
  generating/webdsl/data
  api/module-api
  api/module-names-api
  api/model-names-api
  lib/debug
  lib/lists-tuples
  lib/string

rules // module

  to-webdsl-eventual-no-ui(err) = module-get-modulename;to-webdsl-eventual-no-ui(err)

//  to-webdsl-eventual-no-ui(err): x_name -> 
//      module |[
//        module x_name
//        
//        imports relations/Expressions
//        imports relations/eventually-consistent
//        imports relations/eventually-consistent-ac
//
//        section model
//        
//          def1*
//        
//        section derivations
//        
//          def3*
//          
//          init{
//            initDirtyCollections();
//          }
//          
//          function initDirtyCollections(){
//
//          }
//        
//          native class derivations.x_dirty as DirtyCollections {
//            native1*
//          }
//
//          function flagAllDirty(){
//            stat5*
//          }
//
//          function flagDirty(entity:String, attribute:String){
//            stat6*
//          }
//          
//          function flagDirtyAsync() {
//            //propagate changes to worker thread: flagDirtyAsync
//          }
//        
//          function updateDerivations(){
//            if(!getUpdatesEnabled()){
//              return;
//            }
//            flagDirtyAsync();
//            var notEmpty : Bool;
//            stat4*
//          }
//          
//          invoke updateDerivations() every 3 seconds
//        
//        section data
//          
//          init{
////            stat1*
////            stat2*
////            stat3*
//          }
//        
//      ]|
//    where
//      is-modulename
//    with
//      def1*  := <modulename-get-entitynames;map(to-webdsl-eventual-no-ui(err))>x_name;
////      stat1* := <modulename-get-entityinstancenames;map(to-webdsl-1(err))>x_name;
////      stat2* := <modulename-get-entityinstancenames;map(to-webdsl-2(err))>x_name;
////      stat3* := <modulename-get-entityinstancenames;map(to-webdsl-3(err))>x_name;
//      def3*  := <modulename-get-entitynames;map(entityname-get-attributenames);flatten-list;filter(where(not(attributename-is-normal)));map(attribute-dirty-collection-eventual)>x_name;
//      stat4* := <modulename-get-attributenames-topo;webdsl-toposort-eventual>x_name;
//      x_dirty:= $[[x_name]_Dirty];
//      native1*:= <modulename-get-entitynames;map(entityname-get-attributenames);flatten-list;filter(where(not(attributename-is-normal)));map(attribute-dirty-queue)>x_name;
//      stat5*  := <modulename-get-attributenames-topo;flatten-list;filter(where(not(attributename-is-normal)));map(attribute-flagalldirty)>x_name;
//      stat6*  := <modulename-get-attributenames;                  filter(where(not(attributename-is-normal)));map(attribute-flagdirty)>x_name
  
      

