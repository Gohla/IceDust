module trans/generating/webdsl/expressions-references

imports // constructors

	lib/webdsl/constructors
	lib/webdsl/WebDSL
	src-gen/signatures/Data-sig
	src-gen/signatures/Expressions-sig	
	src-gen/signatures/Types-sig	
	trans/desugaring/constructors

imports // functions

	trans/api/_runtime
	trans/api/model-names-api
	trans/generating/webdsl/types
	trans/naming/names
	trans/naming/_notNaBL

rules // references : entity instance

	to-webdsl(err): EntityInstanceRef(x_name) -> webdsl:e |[ x_name ]|

rules // references : attributes, roles and inverses

	to-webdsl(err): Ref(x_name) -> webdsl:e |[ x_name ]|
		where
			<not(is-shortcutname)>x_name

	to-webdsl(err): MemberAccess(ex1, x_name) -> webdsl:e |[ x_srt1.x_getter(e1) ]|
		where
			<not(is-shortcutname)>x_name
		with
			e1       := <to-webdsl(err)>ex1;
			x_getter := $[get_[x_name]];
			x_srt1   := <_get-type>ex1

rules // references : shortcuts

	to-webdsl(err): Ref(x_name) -> webdsl:e |[ x_srt.x_getter(x_inverseName) ]|
		where
			<is-shortcutname>x_name
		with
			x_inverseName := <get-origin-role;get-inverse>x_name;
			x_roleName    := <get-origin-role2>x_name;
			x_getter      := $[get_[x_roleName]];
			x_srt         := <_get-type>x_inverseName

	to-webdsl(err): MemberAccess(ex1, x_name) -> webdsl:e |[ x_srt2.x_getter2(x_srt1.x_getter1(e1)) ]|
		where
			<is-shortcutname>x_name
		with
			e1 := <to-webdsl(err)>ex1;
			x_inverseName := <get-origin-role;get-inverse>x_name;
			x_roleName    := <get-origin-role2>x_name;
			x_srt1        := <_get-type>ex1;
			x_getter1     := $[get_[x_inverseName]];
			x_srt2        := <_get-type>x_inverseName;
			x_getter2     := $[get_[x_roleName]]

rules // references : this

	to-webdsl(err): This() -> webdsl:e |[this]|

rules
