module generating/webdsl/module

imports // constructors

	webdsl/constructors
	webdsl/WebDSL
	desugaring/constructors

imports // functions
	
	generating/webdsl/model
	generating/webdsl/data
	api/module-api
	api/module-names-api

rules // module

	to-webdsl(err) = module-get-modulename;to-webdsl(err)

	to-webdsl(err): x_name -> 
			webdsl |[
				application x_name
				
        imports relations/crud-ui
        imports relations/Expressions
			
				section model
				
					def1*
				
				section data
					
					init{
						stat1*
						stat2*
						stat3*
					}
				
				section ui
				
					define applicationmenu() {
						elem1*
					}
					
					def2*
				
			]|
		where
			is-modulename
		with
			def1*  := <modulename-get-entitynames;map(to-webdsl(err))>x_name;
			def2*  := <modulename-get-entitynames;map(webdsl-crud)>x_name;
			elem1* := <modulename-get-entitynames;map(webdsl-crud-nav)>x_name;
			stat1* := <modulename-get-entityinstancenames;map(to-webdsl-1(err))>x_name;
			stat2* := <modulename-get-entityinstancenames;map(to-webdsl-2(err))>x_name;
			stat3* := <modulename-get-entityinstancenames;map(to-webdsl-3(err))>x_name

rules //crud
	
	webdsl-crud: x_name -> DeriveCrud(x_name)
	
	webdsl-crud-nav: x_name -> webdsl |[navbaritem{navigate x_manageName(){$text}}]|
		with
			x_manageName := $[manage[x_name]];
			$text := Text(x_name)
	
rules
	
