module trans/lib/files

imports

	lib/editor-common.generated

rules // builders
	
	cleanup-generated-files : (selected, position, ast, path, project-path) -> None()
		with
			<guarantee-extension(|"java");delete-file> path;
			<guarantee-extension(|"aterm");delete-file> path;
			<guarantee-extension(|"analyzed.aterm");delete-file> path;
			<guarantee-extension(|"desugared.aterm");delete-file> path;
			<guarantee-extension(|"partition.analysis");delete-file> path;
			<guarantee-extension(|"partition.task");delete-file> path;
			<guarantee-extension(|"properties.txt");delete-file> path;
			<guarantee-extension(|"selection.task");delete-file> path;
			<guarantee-extension(|"project.aterm");delete-file> path;
			<delete-file>$[[<dirname>path]/project.analysis];
			<delete-file>$[[<dirname>path]/project.index];
			<delete-file>$[[<dirname>path]/project.task];
			<delete-file>$[[<dirname>path]/index.project.aterm];
			<delete-files>(<dirname>$[[project-path]/[path]],"class");
			<dirname;refresh-workspace-file>$[[project-path]/[path]]

rules

	write-file: (fileName, content) -> (fileName, content)
		where
			<dirname;ensure-dir> fileName
		where
			fileDescriptor := <fopen> (fileName, "w");
			<fputs> (content, fileDescriptor);
			<fclose> fileDescriptor;
			<refresh-workspace-file> fileName
			
	ensure-dir: path -> path
		where
			<file-exists;filemode;isdir> path
	ensure-dir: path -> path
		where
			<not(file-exists;filemode;isdir)> path;
			<dirname;ensure-dir> path;
			<mkdir> path

rules

	delete-file: a -> None()
		with
			if file-exists then remove-file end
	
	delete-files: (path, extension) -> None()
		with
			<readdir;filter(has-extension(|"class"));map(\a->$[[path]/[a]]\;delete-file)>path

rules

	copy-dir(|source, target): file -> None()
		with
			<copy-dir>($[[source]/[file]], $[[target]/[file]])
			
	copy-dir: (source, target) -> None()
		where
			<isdir> source
		with
			<ensure-dir> target;
			files := <readdir> source;
			<readdir;map(copy-dir(|source, target))> source
			
	copy-dir: (source, target) -> None()
		where
			<file-exists> source
		with
			<copy-file> (source, target)

