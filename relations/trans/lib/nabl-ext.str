module trans/lib/nabl-ext

imports // constructors
	
	trans/api/_runtime-constructors

imports // functions
	
	trans/api/_runtime
	trans/lib/string

rules // api for unresolved references error messages
	
	nabl-constraint(|ctx): x -> <fail>
		where
			(e, nses) := <unresolved-error>x;
			nses-s := <pp-nses-or>nses;
		  <_has-annotation(?Use(task))>e;
		  <_task-create-error-on-failure(|ctx, task, ["Unresolved reference: ", e, " cannot be resolved to ", <string-prep-a-an>nses-s])> e
	
	pp-nses-or: [] -> ""
	pp-nses-or: [ns|nses] -> <concat-strings>[ns-s, sep, nses-s]
		with
			ns-s := <_pp-ns>ns;
			nses-s := <pp-nses-or>nses;
			if <eq>(<length>nses, 0) then
				sep := ""
			else if <eq>(<length>nses, 1) then
				sep := " or "
			else
				sep := ", "
			end end
	
	unresolved-error = fail // interface implemented by language

rules // api for conflicting nses error messages
	
	nabl-constraint(|ctx):	a -> <fail>
		where
			<is-string>a;                     //on all strings
			name := <nabl-get-name>a;         //that have an nabl name
			<not(_nabl-has-reference)>name;    //and this name is a def
			uri := <_nabl-uri> name;
			ns	:= <_nabl-uri-namespace> uri;
			nses := <ns-conflict-error;filter(fetch(?ns));Hd>ns //get the list of nses that this ns is in (where-fail if there is no such list)
		with
			<name-nses-conflict(|ctx, nses)>name

	name-nses-conflict(|ctx,nses): a-name -> <id>
		with
			<map(name-ns-conflict(|ctx, a-name))>nses

	name-ns-conflict(|ctx, a-name): conflict-ns -> <id>
		with
			uri := <_nabl-uri> a-name;
			ns	:= <_nabl-uri-namespace> uri;
			if <not(eq)> (conflict-ns, ns) then
				uri':= <_nabl-uri-parent> uri;
				parent:= <_nabl-uri-name> uri';
				parent-ns := <_nabl-uri-namespace> uri';
				role-defs := <_nabl-lookup-lexical(|ctx, conflict-ns)> a-name;
				<_task-create-error-on-success(|ctx, role-defs, ["Conflicting ", <_pp-ns>ns, " and ", <_pp-ns>conflict-ns, " ", a-name, " in ", <_pp-ns>parent-ns, " ", parent])> a-name
			end

	ns-conflict-error = fail // interface implemented by language
	
	nabl-get-name = fail // generated by nabl


