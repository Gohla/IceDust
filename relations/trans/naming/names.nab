module trans/naming/names

imports

	include/Relations
	trans/desugaring/desugar
	trans/naming/_notNaBL
	
namespaces
	
	Module
	EntityType
	EntityType2                            //Nasty Hack to enforce no duplicate entity types
	Entity
	Attribute
	Role
	Inverse
	This

properties

	is-relation					of EntityType	: Term						//true iff relation, unset if entity
	entity-or-relation	of EntityType : Term						//EntityType() iff entity, RelationType() iff relation
	derivation-type 		of Attribute	: DerivationType	//either is Derivation(), has DefaultValue() or is Normal()
	fulfill-role 				of EntityType : EntityType			//points to the Relation of which it is a role (the relation is EntityType)
	multiplicity				of Attribute	: Term
	multiplicity2				of Attribute  : Term
	origin-role					of Inverse		: Role
	
binding rules // modules

	ModuleDesugared(m, _, _, _) : 
		defines Module m
		scopes EntityType
		scopes EntityType2
		scopes Entity

binding rules // model

	EntityTypeDef(ent-or-rel, e-ty, _) :
		defines EntityType2 e-ty             //Nasty Hack to enforce no duplicate entity types
		defines non-unique EntityType e-ty
			of entity-or-relation ent-or-rel
		scopes Attribute
		scopes Role
		scopes This
		implicitly defines This This()
			of type e-ty

	Attribute(a, a-ty, a-mu, None()) :
		defines Attribute a
			of type a-ty
			of multiplicity a-mu
			of derivation-type Normal()
			
	Attribute(a, a-ty, a-mu, Derivation(_, a-dt)) :
		defines Attribute a
			of type a-ty
			of multiplicity a-mu
			of derivation-type a-dt

	Role(role-ty, role-mu, role, inverseName) :
		defines Role role
			of type role-ty
			of multiplicity One()
			of multiplicity2 role-mu
		defines non-unique EntityType role-ty
		  scopes Inverse
		defines Inverse inverseName
			of multiplicity role-mu
			of type e-ty
			of origin-role role
			where This() resolves to This this
			and this has type e-ty
		// refers to EntityType2 role-ty               //allows resolving, triggers no unresolved reference errors (it should), breaks the type of role (gets both a def and a use, the use being a EntityType2 having no attributes etc.)

binding rules // data

	EntityOrRelation(EntityType(e-ty), e, _, _) :
		defines Entity e
			of type e-ty
			of multiplicity One()
		scopes This
		implicitly defines This This()
			of type e-ty
			of multiplicity One()

binding rules // references

	EntityType(e) :
		refers to EntityType e

	Identifier(x) :
		refers to Entity x
	otherwise
		refers to Attribute x
		in EntityType e-ty
		where This() resolves to This this
		and this has type e-ty

	MemberAccess(exp, a) :
		refers to Attribute a in EntityType e-ty
		where exp has type e-ty
	otherwise
	  refers to Role a in EntityType e-ty
	  where exp has type e-ty
	otherwise
	  refers to Inverse a in EntityType e-ty
	  where exp has type e-ty
	
	RoleName(r):
		refers to Role r in EntityType e-ty
		where This() resolves to This this
		and this has type e-ty
	
	This() :
		refers to This This()
