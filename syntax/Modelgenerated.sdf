module Modelgenerated
exports
  context-free syntax
    "entity" ID "{" Attribute* "}"           -> Model             {cons("Entity")}
    ID ":" PrimitiveType                     -> Attribute         {cons("Attribute")}
    BasicType                                -> PrimitiveType     {cons("PrimitiveType")}
    "relation" ID "{" MemberOrAttribute* "}" -> Model             {cons("Relation")}
    Member                                   -> MemberOrAttribute 
    Attribute                                -> MemberOrAttribute 
    EntityType Multiplicity ID?              -> Member            {cons("Member")}
    ID                                       -> EntityType        {cons("EntityType")}
    "1"                                      -> Multiplicity      {cons("One")}
    "?"                                      -> Multiplicity      {cons("ZeroOrOne")}
    "+"                                      -> Multiplicity      {cons("OneOrMore")}
    "*"                                      -> Multiplicity      {cons("ZeroOrMore")}

  context-free syntax
    CONTENTCOMPLETE -> Attribute         {cons("COMPLETION-Attribute")}
    CONTENTCOMPLETE -> PrimitiveType     {cons("COMPLETION-PrimitiveType")}
    CONTENTCOMPLETE -> Model             {cons("COMPLETION-Model")}
    CONTENTCOMPLETE -> MemberOrAttribute {cons("COMPLETION-MemberOrAttribute")}
    CONTENTCOMPLETE -> Member            {cons("COMPLETION-Member")}
    CONTENTCOMPLETE -> EntityType        {cons("COMPLETION-EntityType")}
    CONTENTCOMPLETE -> Multiplicity      {cons("COMPLETION-Multiplicity")}