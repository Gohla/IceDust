module properties

imports
lib/runtime/nabl/-
lib/runtime/task/-
lib/runtime/properties/-
lib/runtime/types/-
lib/runtime/editor/-
include/Relations
	names
	

rules
	


	nabl-prop-site(|lang, ctx, uris, states, implicits):
		e@EntityTypeDef(name, _) -> <fail>
		where
			// <debug> $[Fulfilling roles of [name]];
			uri := <nabl-uri> name;
			// <debug> uri;
			scope := <nabl-uri-parent> uri;
			// <debug> scope;
			// TODO: find all relations
			// <debug> allRelations;
			// TODO: find all roles (with me as the type)
			fulfills-roles := "foo";
			<store-fulfill-role(|ctx, fulfills-roles)> name

    
    
    
/**
 *	Defing a property on entities for participating in relations, it should look something like this:
 */
// nabl-prop-site(|lang__, partition__, uris__, states__, implicits__):
//     Entity(en, _) -> <fail>
//     where
//       uri := <nabl-uri> en
//     ; scope := <nabl-uri-parent> uri
//     ; relations := <nabl-resolve-all-tasks(|ctx, NablNsRelation(), [])> [scope]
//     ; roles := <nabl-resolve-all-tasks(|ctx, NablNsRole(), [Type(EntityType(en))])> relations
//     ; <nabl-store-roles(|ctx)>